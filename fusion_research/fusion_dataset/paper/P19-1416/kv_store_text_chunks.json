{
  "chunk-b592d04d5ced8b96eebb6a344d84cdb1": {
    "tokens": 1200,
    "content": "# Compositional Questions Do Not Necessitate Multi-hop Reasoning  \n\nSewon Min∗1, Eric Wallace∗2, Sameer Singh3, Matt Gardner2, Hannaneh Hajishirzi1,2, Luke Zettlemoyer1  \n\n1University of Washington 2Allen Institute for Artificial Intelligence 3University of California, Irvine sewon@cs.washington.edu, ericw@allenai.org  \n\n# Abstract  \n\nMulti-hop reading comprehension (RC) questions are challenging because they require reading and reasoning over multiple paragraphs. We argue that it can be difficult to construct large multi-hop RC datasets. For example, even highly compositional questions can be answered with a single hop if they target specific entity types, or the facts needed to answer them are redundant. Our analysis is centered on HOTPOTQA, where we show that single-hop reasoning can solve much more of the dataset than previously thought. We introduce a single-hop BERT-based RC model that achieves 67 F1—comparable to state-of-theart multi-hop models. We also design an evaluation setting where humans are not shown all of the necessary paragraphs for the intended multi-hop reasoning but can still answer over $80\\%$ of questions. Together with detailed error analysis, these results suggest there should be an increasing focus on the role of evidence in multi-hop reasoning and possibly even a shift towards information retrieval style evaluations with large and diverse evidence collections.  \n\n# 1 Introduction  \n\nMulti-hop reading comprehension (RC) requires reading and aggregating information over multiple pieces of textual evidence (Welbl et al., 2017; Yang et al., 2018; Talmor and Berant, 2018). In this work, we argue that it can be difficult to construct large multi-hop RC datasets. This is because multi-hop reasoning is a characteristic of both the question and the provided evidence; even highly compositional questions can be answered with a single hop if they target specific entity types, or the facts needed to answer them are redundant. For example, the question in Figure 1 is compositional: a plausible solution is to find “What animal’s habitat was the R´eserve Naturelle Lomako Yokokala Question: What is the former name of the animal whose habitat the R´eserve Naturelle Lomako Yokokala was established to protect?  \n\nParagraph 5: The Lomako Forest Reserve is found in Democratic Republic of the Congo. It was established in 1991 especially to protect the habitat of the Bonobo apes. Paragraph 1: The bonobo (“Pan paniscus”), formerly called the pygmy chimpanzee and less often, the dwarf or gracile chimpanzee, is an endangered great ape and one of the two species making up the genus “Pan”.  \n\nestablished to protect?”, and then answer “What is the former name of that animal?”. However, when considering the evidence paragraphs, the question is solvable in a single hop by finding the only paragraph that describes an animal.  \n\nOur analysis is centered on HOTPOTQA (Yang et al., 2018), a dataset of mostly compositional questions. In its RC setting, each question is paired with two gold paragraphs, which should be needed to answer the question, and eight distractor paragraphs, which provide irrelevant evidence or incorrect answers. We show that single-hop reasoning can solve much more of this dataset than previously thought. First, we design a single-hop QA model based on BERT (Devlin et al., 2018), which, despite having no ability to reason across paragraphs, achieves performance competitive with the state of the art. Next, we present an evaluation demonstrating that humans can solve over $80\\%$ of questions when we withhold one of the gold paragraphs.  \n\nTo better understand these results, we present a detailed analysis of why single-hop reasoning works so well. We show that questions include redundant facts which can be ignored when computing the answer, and that the fine-grained entity types present in the provided paragraphs in the RC setting often provide a strong signal for answering the question, e.g., there is only one animal in the given paragraphs in Figure 1, allowing one to immediately locate the answer using one hop.  \n\nThis analysis shows that more carefully chosen distractor paragraphs would induce questions that require multi-hop reasoning. We thus explore an alternative method for collecting distractors based on adversarial paragraph selection. Although this appears to mitigate the problem, a single-hop model re-trained on these distractors can recover most of the original single-hop accuracy, indicating that these distractors are still insufficient. Another method is to consider very large distractor sets such as all of Wikipedia or the entire Web, as done in open-domain HOTPOTQA and ComplexWebQuestions (Talmor and Berant, 2018). However, this introduces additional computational challenges and/or the need for retrieval systems. Finding a small set of distractors that induce multihop reasoning remains an open challenge that is worthy of follow up work.  \n\n# 2 Related Work  \n\nLarge-scale RC datasets (Hermann et al., 2015; Rajpurkar et al., 2016; Joshi et al., 2017) have enabled rapid advances in neural QA models (Seo et al., 2017; Xiong et al., 2018; Yu et al., 2018; Devlin et al., 2018). To foster research on reasoning across multiple pieces of text, multi-hop QA has been introduced (Kocˇisky\\` et al., 2018; Talmor and Berant, 2018; Yang et al., 2018). These datasets contain compositional or “complex” questions. We demonstrate that these questions do not necessitate multi-hop reasoning.  \n\nExisting multi-hop QA datasets are constructed using knowledge bases, e.g., WIKIHOP (Welbl et al",
    "chunk_order_index": 0,
    "full_doc_id": "doc-03f0a528840cf0df3c2895003cef3637"
  },
  "chunk-641cd529de353090b26104297132f871": {
    "tokens": 1200,
    "content": "). To foster research on reasoning across multiple pieces of text, multi-hop QA has been introduced (Kocˇisky\\` et al., 2018; Talmor and Berant, 2018; Yang et al., 2018). These datasets contain compositional or “complex” questions. We demonstrate that these questions do not necessitate multi-hop reasoning.  \n\nExisting multi-hop QA datasets are constructed using knowledge bases, e.g., WIKIHOP (Welbl et al., 2017) and COMPLEXWEBQUESTIONS (Talmor and Berant, 2018), or using crowd workers, e.g., HOTPOTQA (Yang et al., 2018). WIKIHOP questions are posed as triples of a relation and a head entity, and the task is to determine the tail entity of the relationship. COMPLEXWEBQUESTIONS consists of open-domain compositional questions, which are constructed by increasing the complexity of SPARQL queries from WEBQUESTIONS (Berant et al., 2013). We focus on HOTPOTQA, which consists of multi-hop questions written to require reasoning over two para  \n\n![](images/image_1.jpg)  \nFigure 2: Our model, single-paragraph BERT, reads and scores each paragraph independently. The answer from the paragraph with the lowest $y_{\\mathrm{empty}}$ score is chosen as the final answer.  \n\ngraphs from Wikipedia.  \n\nParallel research from Chen and Durrett (2019) presents similar findings on HOTPOTQA. Our work differs because we conduct human analysis to understand why questions are solvable using singlehop reasoning. Moreover, we show that selecting distractor paragraphs is difficult using current retrieval methods.  \n\n# 3 Single-paragraph QA  \n\nThis section shows the performance of a single-hop model on HOTPOTQA.  \n\n# 3.1 Model Description  \n\nOur model, single-paragraph BERT, scores and answers each paragraph independently (Figure 2). We then select the answer from the paragraph with the best score, similar to Clark and Gardner (2018).1  \n\nThe model receives a question $Q=[q_{1},..,q_{m}]$ and a single paragraph $\\textit{P}=\\ [p_{1},...,p_{n}]$ as input. Following Devlin et al. (2018), $\\begin{array}{r l}{S}&{{}=}\\end{array}$ $[q_{1},...,q_{m},[\\mathtt{S E P}],p_{1},...,p_{n}]$ , where [SEP] is a special token, is fed into BERT:  \n\n$$\nS^{\\prime}=\\operatorname{BERT}(S)\\in\\mathbb{R}^{h\\times(m+n+1)},\n$$  \n\nwhere $h$ is the hidden dimension of BERT. Next, a classifier uses max-pooling and learned parameters $W_{1}\\in\\mathbb{R}^{h\\times4}$ to generate four scalars:  \n\n$$\n[y_{\\mathrm{span}};y_{\\mathrm{yes}};y_{\\mathrm{no}};y_{\\mathrm{empty}}]=W_{1}\\mathrm{maxpool}(S^{\\prime}),\n$$  \n\nwhere $y_{\\mathrm{span}},y_{\\mathrm{yes}},y_{\\mathrm{no}}$ and $y_{\\mathrm{empty}}$ indicate the answer is either a span, $Y\\!\\in\\!S$ , no, or no answer. An extractive paragraph span, span, is obtained separately following Devlin et al. (2018). The final model outputs are a scalar value $y_{\\mathrm{empty}}$ and a text of either span, $Y{\\in}S$ or no, based on which of yspan, yyes, yno has the largest value.  \n\n![](images/image_2.jpg)  \n\nTable 1: F1 scores on HOTPOTQA. \\* indicates the result is on the validation set; the other results are on the hidden test set shown in the official leaderboard.  \n\nFor a particular HOTPOTQA example, we run single-paragraph BERT on each paragraph in parallel and select the answer from the paragraph with the smallest yempty.  \n\n# 3.2 Model Results  \n\nHOTPOTQA has two settings: a distractor setting and an open-domain setting.  \n\nDistractor Setting The HOTPOTQA distractor setting pairs the two paragraphs the question was written for (gold paragraphs) with eight spurious paragraphs selected using TF-IDF similarity with the question (distractors). Our single-paragraph BERT model achieves 67.08 F1, comparable to the state-of-the-art (Table 1). This indicates the majority of HOTPOTQA questions are answerable in the distractor setting using a single-hop model.  \n\nOpen-domain Setting The HOTPOTQA opendomain setting (Fullwiki) does not provide a set of paragraphs—all of Wikipedia is considered. We follow Chen et al. (2017) and retrieve paragraphs using bigram TF-IDF similarity with the question.  \n\nWe use the single-paragraph BERT model trained in the distractor setting. We also fine-tune the model using incorrect paragraphs selected by the retrieval system. In particular, we retrieve 30 paragraphs and select the eight paragraphs with the lowest yempty scores predicted by the trained model. Single-paragraph BERT achieves 38.06 F1 in the open-domain setting (Table 1). This shows that the open-domain setting is challenging for our single-hop model and is worthy of future study.  \n\n# 1 Compositional Questions Are Not Always Multi-hop  \n\nThis section provides a human analysis of HOTPOTQA to understand what phenomena enable single-hop answer solutions. HOTPOTQA contains two question types",
    "chunk_order_index": 1,
    "full_doc_id": "doc-03f0a528840cf0df3c2895003cef3637"
  },
  "chunk-c96e6bb9567410b6eb2a84b3ea94d4cd": {
    "tokens": 1200,
    "content": "eight paragraphs with the lowest yempty scores predicted by the trained model. Single-paragraph BERT achieves 38.06 F1 in the open-domain setting (Table 1). This shows that the open-domain setting is challenging for our single-hop model and is worthy of future study.  \n\n# 1 Compositional Questions Are Not Always Multi-hop  \n\nThis section provides a human analysis of HOTPOTQA to understand what phenomena enable single-hop answer solutions. HOTPOTQA contains two question types, Bridge and Comparison, which we evaluate separately.  \n\n# 4.1 Categorizing Bridge Questions  \n\nBridge questions consist of two paragraphs linked by an entity (Yang et al., 2018), e.g., Figure 1. We first investigate single-hop human performance on HOTPOTQA bridge questions using a human study consisting of NLP graduate students. Humans see the paragraph that contains the answer span and the eight distractor paragraphs, but do not see the other gold paragraph. As a baseline, we show a different set of people the same questions in their standard ten paragraph form.  \n\nOn a sample of 200 bridge questions from the validation set, human accuracy shows marginal degradation when using only one hop: humans obtain 87.37 F1 using all ten paragraphs and 82.06 F1 when using only nine (where they only see a single gold paragraph). This indicates humans, just like models, are capable of solving bridge questions using only one hop.  \n\nNext, we manually categorize what enables single-hop answers for 100 bridge validation examples (taking into account the distractor paragraphs), and place questions into four categories (Table 2).  \n\nMulti-hop $27\\%$ of questions require multi-hop reasoning. The first example of Table 2 requires locating the university where “Ralph Hefferline” was a psychology professor, and multiple universities are provided as distractors. Therefore, the answer cannot be determined in one hop.  \n\nWeak Distractors $35\\%$ of questions allow single-hop answers in the distractor setting, mostly by entity type matching. Consider the question in the second row of Table 2: in the ten provided paragraphs, only one actress has a government position. Thus, the question is answerable without considering the film “Kiss and Tell.” These examples may become multi-hop in the open-domain setting, e.g., there are numerous actresses with a government position on Wikipedia.  \n\n![](images/image_3.jpg)  \n\nTable 2: We categorize bridge questions while taking the paragraphs into account. We exclude $4\\%$ of questions that we found to have incorrect or ambiguous answer annotations. See Section 4.1 for details on question types.   \n\n![](images/image_4.jpg)  \n\nTo further investigate entity type matching, we reduce the question to the first five tokens starting from the wh-word, following Sugawara et al. (2018). Although most of these reduced questions appear void of critical information, the F1 score of single-paragraph BERT only degrades about 15 F1 from 67.08 to 52.13.  \n\nRedundant Evidence $26\\%$ of questions are compositional but are solvable using only part of the question. For instance, in the third example of Table 2 there is only a single founder of “Kaiser Ventures.” Thus, one can ignore the condition on “American industrialist” and “father of modern American shipbuilding.” This category differs from the weak distractors category because its questions are single-hop regardless of the distractors.  \n\nTable 3: We automatically categorize comparison questions using rules $2\\%$ cannot be automatically categorized). Single-paragraph BERT achieves near chance accuracy on multi-hop questions but exploits single-hop ones.   \n\n![](images/image_5.jpg)  \n\nNon-compositional Single-hop $8\\%$ of questions are non-compositional and single-hop. In the last example of Table 2, one sentence contains all of the information needed to answer correctly.  \n\n# 4.2 Categorizing Comparison Questions  \n\nComparison questions require quantitative or logical comparisons between two quantities or events. We create rules (Appendix C) to group comparison questions into three categories: questions which require multi-hop reasoning (multi-hop), may require multi-hop reasoning (context-dependent), and require single-hop reasoning (single-hop).  \n\nMany comparison questions are multi-hop or context-dependent multi-hop, and single-paragraph Table 4: We train on HOTPOTQA using standard distractors (Original) or using adversarial distractors (Adversarial). The model is then tested on the original distractors, adversarial distractors, or adversarial distractors with filtering by entity type $(+\\,T y p e)$ .  \n\nBERT achieves near chance accuracy on these types of questions (Table 3).4 This shows that most comparison questions are not solvable by our single-hop model.  \n\n# 5 Can We Find Better Distractors?  \n\nIn Section 4.1, we identify that $35\\%$ of bridge examples are solvable using single-hop reasoning due to weak distractor paragraphs. Here, we attempt to automatically correct these examples by choosing new distractor paragraphs which are likely to trick our single-paragraph model.  \n\nAdversarial Distractors We select the top-50 first paragraphs of Wikipedia pages using TF-IDF similarity with the question, following the original HOTPOTQA setup. Next, we use single-paragraph BERT to adversarially select the eight distractor paragraphs from these 50 candidates. In particular, we feed each paragraph to the model and select the paragraphs with the lowest yempty score (i.e., the paragraphs that the model thinks contain the answer). These paragraphs are dissimilar to the original distractors—there is a $9.82\\%$ overlap.  \n\nWe report the F1 score of single-paragraph BERT on these new distractors",
    "chunk_order_index": 2,
    "full_doc_id": "doc-03f0a528840cf0df3c2895003cef3637"
  },
  "chunk-da3785709741127896bd86556478a157": {
    "tokens": 1200,
    "content": "Next, we use single-paragraph BERT to adversarially select the eight distractor paragraphs from these 50 candidates. In particular, we feed each paragraph to the model and select the paragraphs with the lowest yempty score (i.e., the paragraphs that the model thinks contain the answer). These paragraphs are dissimilar to the original distractors—there is a $9.82\\%$ overlap.  \n\nWe report the F1 score of single-paragraph BERT on these new distractors in Table 4: the accuracy declines from 67.08 F1 to 46.84 F1. However, when the same procedure is done on the training set and the model is re-trained, the accuracy increases to 60.10 F1 on the adversarial distractors.  \n\nType Distractors We also experiment with filtering the initial list of 50 paragraph to ones whose entity type (e.g., person) matches that of the gold paragraphs. This can help to eliminate the entity type bias described in Section 4.1. As shown in Table 4, the original model’s accuracy degrades significantly (drops to 40.73 F1). However, similar to the previous setup, the model trained on the adversarially selected distractors can recover most of its original accuracy (increases to 58.42 F1).  \n\nThese results show that single-paragraph BERT can struggle when the distribution of the distractors changes (e.g., using adversarial selection rather than only TF-IDF). Moreover, the model can somewhat recover its original accuracy when re-trained on distractors from the new distribution.  \n\n# 6 Conclusions  \n\nIn summary, we demonstrate that question compositionality is not a sufficient condition for multi-hop reasoning. Instead, future datasets must carefully consider what evidence they provide in order to ensure multi-hop reasoning is required. There are at least two different ways to achieve this.  \n\nOpen-domain Questions Our single-hop model struggles in the open-domain setting. We largely attribute this to the insufficiencies of standard TFIDF retrieval for multi-hop questions. For example, we fail to retrieve the paragraph about “Bonobo apes” in Figure 1, because the question does not contain terms about “Bonobo apes.” Table 5 shows that the model achieves 39.12 F1 given 500 retrieved paragraphs, but achieves 53.12 F1 when additional two gold paragraphs are given, demonstrating the significant effect of failure to retrieve gold paragraphs. In this context, we suggest that future work can explore better retrieval methods for multi-hop questions.  \n\nRetrieving Strong Distractors Another way to ensure multi-hop reasoning is to select strong disTable 5: The accuracy of single-paragraph BERT in different open-domain retrieval settings. TF-IDF often fails to retrieve the gold paragraphs even when using 500 candidates.  \n\n![](images/image_6.jpg)  \n\ntractor paragraphs. For example, we found $35\\%$ of bridge questions are currently single-hop but may become multi-hop when combined with stronger distractors (Section 4.1). However, as we demonstrate in Section 5, selecting strong distractors for RC questions is non-trivial. We suspect this is also due to the insufficiencies of standard TFIDF retrieval for multi-hop questions. In particular, Table 5 shows that single-paragraph BERT achieves 53.12 F1 even when using 500 distractors (rather than eight), indicating that 500 distractors are still insufficient. In this end, future multi-hop RC datasets can develop improved methods for distractor collection.  \n\n# Acknowledgements  \n\nThis research was supported by ONR (N00014-18- 1-2826, N00014-17-S-B001), NSF (IIS-1616112, IIS-1252835, IIS-1562364), ARO (W911NF-16-1- 0121), an Allen Distinguished Investigator Award, Samsung GRO and gifts from Allen Institute for AI, Google, and Amazon.  \n\nThe authors would like to thank Shi Feng, Nikhil Kandpal, Victor Zhong, the members of AllenNLP and UW NLP, and the anonymous reviewers for their valuable feedback.  \n\n# References  \n\nJonathan Berant, Andrew Chou, Roy Frostig, and Percy Liang. 2013. Semantic parsing on freebase from question-answer pairs. In EMNLP.   \nDanqi Chen, Adam Fisch, Jason Weston, and Antoine Bordes. 2017. Reading wikipedia to answer opendomain questions. In ACL.   \nJifan Chen and Greg Durrett. 2019. Understanding dataset design choices for multi-hop reasoning. In NAACL.   \nChristopher Clark and Matt Gardner. 2018. Simple and effective multi-paragraph reading comprehension. In ACL.   \nJacob Devlin, Ming-Wei Chang, Kenton Lee, and Kristina Toutanova. 2018. BERT: Pre-training of deep bidirectional transformers for language understanding. In NAACL.   \nKarl Moritz Hermann, Tomas Kocisky, Edward Grefenstette, Lasse Espeholt, Will Kay, Mustafa Suleyman, and Phil Blunsom. 2015. Teaching machines to read and comprehend. In NIPS.   \nMandar Joshi, Eunsol Choi, Daniel S Weld, and Luke Zettlemoyer. 2017. TriviaQA: A large scale distantly supervised challenge dataset for reading comprehension. In ACL.   \nDiederik P Kingma and Jimmy Ba. 2015. Adam: A method for stochastic optimization. In ICLR.   \nToma´sˇ Kocˇisk\\`y, Jonathan Schwarz, Phil Blunsom, Chris Dyer, Karl Moritz Hermann, Ga´bor Melis, and Edward Grefenstette. 2018. The NarrativeQA reading comprehension challenge. T",
    "chunk_order_index": 3,
    "full_doc_id": "doc-03f0a528840cf0df3c2895003cef3637"
  },
  "chunk-725d8cfe3eb952e1f9c79442ce7a6c8b": {
    "tokens": 1200,
    "content": "A large scale distantly supervised challenge dataset for reading comprehension. In ACL.   \nDiederik P Kingma and Jimmy Ba. 2015. Adam: A method for stochastic optimization. In ICLR.   \nToma´sˇ Kocˇisk\\`y, Jonathan Schwarz, Phil Blunsom, Chris Dyer, Karl Moritz Hermann, Ga´bor Melis, and Edward Grefenstette. 2018. The NarrativeQA reading comprehension challenge. TACL.   \nAdam Paszke, Sam Gross, Soumith Chintala, Gregory Chanan, Edward Yang, Zachary DeVito, Zeming Lin, Alban Desmaison, Luca Antiga, and Adam Lerer. 2017. Automatic differentiation in PyTorch. In NIPS Autodiff Workshop.   \nPranav Rajpurkar, Jian Zhang, Konstantin Lopyrev, and Percy Liang. 2016. SQuAD: $100{,}000{+}$ questions for machine comprehension of text. In EMNLP.   \nMinjoon Seo, Aniruddha Kembhavi, Ali Farhadi, and Hannaneh Hajishirzi. 2017. Bidirectional attention flow for machine comprehension. In ICLR.   \nSaku Sugawara, Kentaro fInui, Satoshi Sekine, and Akiko Aizawa. 2018. What makes reading comprehension questions easier? In EMNLP.   \nAlon Talmor and Jonathan Berant. 2018. The web as a knowledge-base for answering complex questions. In NAACL.   \nJohannes Welbl, Pontus Stenetorp, and Sebastian Riedel. 2017. Constructing Datasets for Multi-hop Reading Comprehension Across Documents. In TACL.   \nCaiming Xiong, Victor Zhong, and Richard Socher. 2018. $\\mathrm{DCN+}$ : Mixed objective and deep residual coattention for question answering. In ICLR.   \nZhilin Yang, Peng Qi, Saizheng Zhang, Yoshua Bengio, William W Cohen, Ruslan Salakhutdinov, and Christopher D Manning. 2018. HotpotQA: A dataset for diverse, explainable multi-hop question answering. In EMNLP.   \nAdams Wei Yu, David Dohan, Minh-Thang Luong, Rui Zhao, Kai Chen, Mohammad Norouzi, and Quoc V. Le. 2018. Qanet: Combining local convolution with global self-attention for reading comprehension. In ICLR.  \n\n# A Example Distractor Question  \n\nWe present the full example from Figure 1 below.   \nParagraphs 1 and 5 are the two gold paragraphs.  \n\nQuestion What is the former name of the animal whose habitat the R´eserve Naturelle Lomako Yokokala was established to protect?  \n\nAnswer pygmy chimpanzee (Gold Paragraph) Paragraph 1 The bonobo (or ; “Pan paniscus”), formerly called the pygmy chimpanzee and less often, the dwarf or gracile chimpanzee, is an endangered great ape and one of the two species making up the genus “Pan”; the other is “Pan troglodytes”, or the common chimpanzee. Although the name “chimpanzee” is sometimes used to refer to both species together, it is usually understood as referring to the common chimpanzee, whereas “Pan paniscus” is usually referred to as the bonobo.  \n\nParagraph 2 The Carri´ere des Nerviens Regional Nature Reserve (in French “R´eserve naturelle r´egionale de la carri´ere des Nerviens”) is a protected area in the Nord-Pas-de-Calais region of northern France. It was established on 25 May 2009 to protect a site containing rare plants and covers just over 3 ha. It is located in the municipalities of Bavay and Saint-Waast in the Nord department.  \n\nParagraph 3 C´ereste (Occitan: “Ceir´esta”) is a commune in the Alpes-de-Haute-Provence department in southeastern France. It is known for its rich fossil beds in fine layers of “Calcaire de Campagne Calavon” limestone, which are now protected by the Parc naturel re´gional du Luberon and the Re´serve naturelle ge´ologique du Luberon.  \n\nParagraph 4 The Grand Cote National Wildlife Refuge (French: “R´eserve Naturelle Faunique Nationale du Grand- Cote”) was established in 1989 as part of the North American Waterfowl Management Plan. It is a 6000 acre reserve located in Avoyelles Parish, near Marksville, Louisiana, in the United States.  \n\n(Gold Paragraph) Paragraph 5 The Lomako Forest Reserve is found in Democratic Republic of the Congo. It was established in 1991 especially to protect the habitat of the Bonobo apes. This site covers $3,601.88~\\mathrm{km^{2}}$ .  \n\nParagraph 6 Guadeloupe National Park (French: “Parc national de la Guadeloupe”) is a national park in Guadeloupe, an overseas department of France located in the Leeward Islands of the eastern Caribbean region. The Grand Cul-de-Sac Marin Nature Reserve (French: “R´eserve Naturelle du Grand Cul-de-Sac Marin”) is a marine protected area adjacent to the park and administered in conjunction with it. Together, these protected areas comprise the Guadeloupe Archipelago (French: “l’Archipel de la Guadeloupe”) biosphere reserve.  \n\nParagraph 7 La D´esirade National Nature Reserve (French: “R´eserve naturelle nationale de La De´sirade”) is a reserve in De´s",
    "chunk_order_index": 4,
    "full_doc_id": "doc-03f0a528840cf0df3c2895003cef3637"
  },
  "chunk-5e7ccf1d72e7b038983b2017f5d8ddb6": {
    "tokens": 1200,
    "content": "(French: “R´eserve Naturelle du Grand Cul-de-Sac Marin”) is a marine protected area adjacent to the park and administered in conjunction with it. Together, these protected areas comprise the Guadeloupe Archipelago (French: “l’Archipel de la Guadeloupe”) biosphere reserve.  \n\nParagraph 7 La D´esirade National Nature Reserve (French: “R´eserve naturelle nationale de La De´sirade”) is a reserve in De´sirade Island in Guadeloupe. Established under the Ministerial Decree No. 2011-853 of 19 July 2011 for its special geological features it has an area of 62 ha. The reserve represents the geological heritage of the Caribbean tectonic plate, with a wide spectrum of rock formations, the outcrops of volcanic activity being remnants of the sea level oscillations. It is one of thirty three geosites of Guadeloupe.  \n\nParagraph 8 La Tortue ou l’Ecalle or Ile Tortue is a small rocky islet off the northeastern coast of Saint Barth´elemy in the Caribbean. Its highest point is $35\\,\\mathrm{m}$ above sea level. Referencing tortoises, it forms part of the R´eserve naturelle nationale de Saint-Barthe´lemy with several of the other northern islets of St Barts.  \n\nParagraph 9 Nature Reserve of Saint Bartholomew (R´eserve Naturelle de SaintBarth´elemy) is a nature reserve of Saint Barth´elemy (RNN 132), French West Indies, an overseas collectivity of France.  \n\nParagraph 10 Ile Fourchue, also known as Ile Fourche is an island between Saint-Barthe´lemy and Saint Martin, belonging to the Collectivity of Saint Barth´elemy. The island is privately owned. The only inhabitants are some goats. The highest point is 103 meter above sea level. It is situated within R´eserve naturelle nationale de Saint-Barthe´lemy.  \n\n# BFull Model Details  \n\nSingle-paragraph BERT is a pipeline which first retrieves a single paragraph using a classifier and then selects the associated answer. Formally, the model receives a question $Q\\,=\\,[q_{1},..,q_{m}]$ and a single paragraph $P\\,=\\,[p_{1},...,p_{n}]$ as input. The question and paragraph are merged into a single sequence, $S=[q_{1},...,q_{m},[\\mathrm{SEP}],p_{1},...,p_{n}]$ , where [SEP] is a special token indicating the boundary. The sequence is fed into BERT-BASE:  \n\n![](images/image_7.jpg)  \nFigure 3: Single-paragraph BERT reads and scores each paragraph independently. The answer from the paragraph with the lowest $y^{\\mathrm{empty}}$ score is chosen as the final answer.  \n\n$$\nS^{\\prime}=\\operatorname{BERT}(S)\\in\\mathbb{R}^{h\\times(m+n+1)},\n$$  \n\nwhere $h$ is the hidden dimension of BERT. Next, a classifier uses max-pooling and learned parameters $W_{1}\\in\\mathbb{R}^{h\\times4}$ to generate four scalars:  \n\n$$\n[y_{\\mathrm{span}};y_{\\mathrm{yes}};y_{\\mathrm{no}};y_{\\mathrm{empty}}]=W_{1}{\\mathrm{maxpool}}(S^{\\prime}),\n$$  \n\nwhere $y_{\\mathrm{span}},y_{\\mathrm{yes}},y_{\\mathrm{no}}$ and $y_{\\mathrm{empty}}$ indicate the answer is either a span, $Y\\!\\in\\!S$ , no, or no answer.  \n\nA candidate answer span is then computed separately from the classifier. We define  \n\n$$\n\\begin{array}{r}{p_{\\mathrm{start}}=\\mathrm{Softmax}(W_{2}S^{\\prime})}\\\\ {p_{\\mathrm{end}}=\\mathrm{Softmax}(W_{3}S^{\\prime}),}\\end{array}\n$$  \n\nwhere $W_{2},W_{3}\\in\\mathbb{R}^{h}$ are learned parameters. Then, $y_{\\mathrm{start}}$ and $y_{\\mathrm{end}}$ are obtained:  \n\n$$\ny_{\\mathrm{start}},y_{\\mathrm{end}}=\\underset{i\\leq j}{\\arg\\operatorname*{max}}\\,p_{\\mathrm{start}}^{i}p_{\\mathrm{end}}^{j}\n$$  \n\nwhere $p_{\\mathrm{start}}^{i}$ and $p_{\\mathrm{end}}^{j}$ indicate the $i$ -th element of $p_{\\mathrm{start}}$ and $j$ -th element of $p_{\\mathrm{end}}$ , respectively.  \n\nWe now have four scalar values yspan, yyes, yno, and $y_{\\mathrm{empty}}$ and a span from the paragraph span $=$ $[S_{y_{\\mathrm{start}}},\\ldots,S_{y_{\\mathrm{end}}}]$ .  \n\nFor HOTPOTQA, the input is a question and $N$ context paragraphs. We create a batch of size $N$ , where each entry is a question and a single paragraph. Denote the ouput from $i$ -th entry as $y_{\\mathrm{span}}^{i},y_{\\mathrm{yes}}^{i},y_{\\mathrm{no}}^{i},y_{\\mathrm{empty}}^{i}\\mathrm{and}\\;\\mathrm{span}^{i}$ . The final answer is selected as:  \n\n$$\n\\",
    "chunk_order_index": 5,
    "full_doc_id": "doc-03f0a528840cf0df3c2895003cef3637"
  },
  "chunk-76e5e660f564ca4da0077e1cfaaa9966": {
    "tokens": 687,
    "content": "$N$ context paragraphs. We create a batch of size $N$ , where each entry is a question and a single paragraph. Denote the ouput from $i$ -th entry as $y_{\\mathrm{span}}^{i},y_{\\mathrm{yes}}^{i},y_{\\mathrm{no}}^{i},y_{\\mathrm{empty}}^{i}\\mathrm{and}\\;\\mathrm{span}^{i}$ . The final answer is selected as:  \n\n$$\n\\begin{array}{r c l}{j}&{=}&{\\mathrm{argmin}_{i}(y_{\\mathrm{empty}}^{i})}\\\\ {y_{\\mathrm{max}}}&{=}&{\\mathrm{max}(y_{\\mathrm{span}}^{j},y_{\\mathrm{yes}}^{j},y_{\\mathrm{no}}^{j})}\\\\ {\\mathrm{answer}}&{=}&{\\left\\{\\begin{array}{l l}{\\mathrm{span}^{j}}&{\\mathrm{if}\\,y_{\\mathrm{span}}^{j}=y_{\\mathrm{max}}}\\\\ {\\mathrm{ves}}&{\\mathrm{if}\\,y_{\\mathrm{yes}}^{j}=y_{\\mathrm{max}}}\\\\ {\\mathrm{no}}&{\\mathrm{if}\\,y_{\\mathrm{no}}^{j}=y_{\\mathrm{max}}}\\end{array}\\right.}\\end{array}\n$$  \n\nDuring training, $y_{\\mathrm{empty}}^{i}$ is set to 0 for the paragraph which contains the answer span and 1 otherwise.  \n\nImplementation Details We use PyTorch (Paszke et al., 2017) based on Hugging Face’s implementation.5 We use Adam (Kingma and Ba, 2015) with learning rate $5\\times10^{-5}$ . We lowercase the input and set the maximum sequence length $|S|$ to 300. If a sequence is longer than 300, we split it into multiple sequences and treat them as different examples.  \n\n# C Categorizing Comparison Questions  \n\nThis section describes how we categorize comparison questions. We first identify ten question operations that sufficiently cover comparison questions (Table 6). Next, for each question, we extract the two entities under comparison using the Spacy NER tagger on the question and the two HOTPOTQA supporting facts. Using these extracted  \n\n![](images/image_8.jpg)  \n\n# Algorithm 1 Algorithm for Identifying Question Operations  \n\n![](images/image_9.jpg)  \n\nentities, we identity the suitable question operation following Algorithm 1.  \n\nBased on the identified operation, questions are classified into multi-hop, context-dependent multi-hop, or single-hop. First, numerical questions are always multi-hop (e.g., first example of Table 6). Next, the operations And, Or, Is equal, and Not equal are context-dependent multi-hop. For instance, in the second example of Table 6, if “Hot Rod” is not a magazine, one can immediately answer No. Finally, the operations Which is true and Intersection are single-hop because they can be answered using one paragraph regardless of the context. For instance, in the third example of Table 6, if Henry Roth’s paragraph explains he is from England, one can answer Henry Roth, otherwise, the answer is Robert Erskine Childers.",
    "chunk_order_index": 6,
    "full_doc_id": "doc-03f0a528840cf0df3c2895003cef3637"
  }
}