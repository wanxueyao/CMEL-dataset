PROMPTS = {}

PROMPTS["image_entity_alignment_user"] = """-Input-
Entity Type:{entity_type}
Image Information
Image Entity Name: {img_entity}
Image Entity Description: {img_entity_description}
Text Information
Chunk Text: {chunk_text}
-Output Format-"""

PROMPTS["image_entity_alignment_system"] = """You are an expert in image-text matching. Based on the input image, image entity information (including its name and description), and the corresponding text, your task is to extract the most appropriate textual entity that matches the entire image. Additionally, for each extracted entity, you must include its name, type, description, and the reason for the match.
The entity type must be one of the following predefined categories: {entity_type}. If no entity can be matched with the image, output "no_match" and explain why.
-Guidelines-
1.Analyze the Image and Image Entity to determine the overall theme or subject.
2.Identify the most relevant entity from the text that represents the content of the image as a whole.
3.Use the text to assign a matching entity_type and provide a description summarizing the entity.
4.Ensure the reason explicitly ties the image description and content to the selected textual entity.
-Output Format-
{
  "entity_name": "Entity1",
  "entity_type": "TYPE",
  "description": "Description",
  "reason": "Reason for the match, e.g., the image clearly shows the entity, the entity is relevant to the text, or the entity is mentioned in the text."
}
or
{
  "entity_name": "no_match",
  "entity_type": "NONE",
  "description": "N/A",
  "reason": "Explanation why no match is possible, e.g., insufficient detail, lack of correspondence between image and text."
}
-Input Example-
Entity Type: {entity_type}
Image Information
Image Entity Name: image_3
Image Entity Description: Several characters are fighting, with a clear protagonist and antagonist present.
Text Information
Chunk Text: 
Chapter 5: The Great Battle In this chapter, the protagonist, Alex, faces off against the antagonist, General Zane. The battle is fierce, involving Alex's allies and Zane's army. The scene is filled with tension, dramatic turns, and heroic sacrifices.
-Output Example-
{
  "entity_name": "The Great Battle",
  "entity_type": "EVENT",
  "description": "A major battle between the protagonist, Alex, and the antagonist, General Zane, involving allies and enemies in a dramatic confrontation.",
  "reason": "The image depicts a battle scene involving multiple characters, which directly aligns with the main event of Chapter 5: 'The Great Battle.' The presence of a protagonist, antagonist, and their respective allies supports this match."
}
"""

PROMPTS["DEFAULT_ENTITY_TYPES"] = ["organization", "person", "geo", "event"]

PROMPTS["image_entity_judgement_user"] = """
-Input-
img_entity: {img_entity}
img_entity_description: {img_entity_description}
chunk_text: {chunk_text}
possible_matched_entities:
{possible_matched_entities}
-Output-
"""

PROMPTS["image_entity_judgement_system"] = """You are an expert system designed to identify matching entities based on semantic similarity and context. Given the following inputs:
img_entity: The name of the image entity to be evaluated.
img_entity_description: A description of the image entity.
chunk_text: Text surrounding the image entity providing additional context.
possible_image_matched_entities: A list of possible matching entities. Each entity is represented as a dictionary with the following fields:
  entity_name: The name of the possible entity.
  entity_type: The type/category of the entity.
  description: A detailed description of the entity.
  additional_info: Additional relevant information about why choose this entity (such as similarity, reason generated by LLM, etc.).
-Task-
Using the information provided, determine whether the img_entity matches any of the entities in possible_image_matched_entities. Consider the following criteria:
1.Semantic Matching: Evaluate the semantic alignment between the img_entity and the possible matching entities, based on their names, descriptions, and types. Even without a similarity score, assess how well the img_entity matches the attributes of each possible entity.
2.Contextual Relevance: Use the chunk_text and img_entity_description to assess the contextual alignment between the img_entity and the possible entity.
-Output-
If a match is found, only return the entity_name of the best-matching entity.
If no match meets the criteria (e.g., low similarity or poor contextual fit), only output "no match".
Do not include any explanations, reasons, or additional information in the output.
-Example Input-
img_entity: "Figure 1"
img_entity_description: "An electric vehicle manufactured by Tesla, Inc., featuring advanced autopilot technology."
chunk_text: "Tesla is a leader in the electric vehicle market, pioneering technologies like autopilot. Other competitors include Rivian and Lucid Motors, which focus on luxury EVs. Tesla's Gigafactories are integral to its global strategy."
possible_image_matched_entities:
[
  {
    "entity_name": "Tesla",
    "description": "A leading company in electric vehicles and renewable energy."
  },
  {
    "entity_name": "Model S",
    "description": "A luxury electric vehicle manufactured by Tesla, Inc., featuring advanced autopilot technology."
  },
  {
    "entity_name": "Rivian",
    "description": "A company producing luxury electric vehicles, focusing on adventure-oriented designs."
  }
]

-Example Output-
"Model S"
"""

PROMPTS["text_entity_judgement_user"] = """
-Input-
possible_matched_entities:
{possible_matched_entities}
-Output-
"""

PROMPTS["text_entity_judgement_system"] = """You are a system designed to determine whether an image_entity and a chunk_entity should be merged based on semantic similarity and contextual relevance. Your task is to analyze the provided possible_matched_entities and decide whether any entities should be merged. If so, construct a merged entity in the specified format. Otherwise, return an empty list.
-Task-
For each entry in possible_matched_entities:
1.Determine if the image_entity and chunk_entity should be merged based on the similarity score and contextual relevance.
2.If merging is appropriate:
  Create a new merged entity in the following format:
  {
      "entity_name": <chunk_entity['entity_name']>,
      "entity_type": <chunk_entity['entity_type']>,
      "description": <A unified description that combines the `image_entity` and `chunk_entity` descriptions>,
      "source_image_entities": [<image_entity['entity_name']>],
      "source_text_entities": [<chunk_entity['entity_name']>]
  }
  Use the chunk_entity['entity_name'] and chunk_entity['entity_type'] as the main name and type for the merged entity.
  Combine the description fields into a single unified description.
-Output Requirements-
The output must be a strictly formatted JSON list.
If merging is appropriate, return a list of merged entities, with one entity for each match.
If no entities should be merged, return an empty list ([]).
Do not output any code, only the required JSON results.
Do not include any reasons, explanations, or additional content in the output.
-Notes-
Process all pairs in the possible_matched_entities list, as there may be multiple entries to evaluate. 
-Example Input-
possible_matched_entities:
[
    {
        "image_entity": {
            "entity_name": "EDGES",
            "entity_type": "UNKNOWN",
            "description": "The edges connect the nodes in the network graph, indicating relationships or interactions between the entities."
        },
        "chunk_entity": {
            "entity_name": "\"RELATIONSHIP EDGES\"",
            "entity_type": "\"CONCEPT\"",
            "description": "\"Relationship Edges are connections between entity nodes in a graph, representing the relationships between entities.\""
        },
        "similarity": 0.80902123
    }
]
-Example Output-
[
    {
        "entity_name": "RELATIONSHIP EDGES",
        "entity_type": "CONCEPT",
        "description": "Relationship Edges are connections between entity nodes in a graph, representing the relationships between entities. The edges connect the nodes in the network graph, indicating relationships or interactions between the entities.",
        "source_image_entities": [
            "EDGES"
        ],
        "source_text_entities": [
            "RELATIONSHIP EDGES"
        ]
    }
]
If no entities should be merged:
[]
"""

PROMPTS["llm_image_entity_alignment_user"] = """
-Input-
Image Entity Description: {img_entity_description}
Entity List:{entity_list}
-Output-
"""

PROMPTS["llm_image_entity_alignment_system"] = """
Given the following input data:
Image Entity Description: "img_entity_description"
Entity List: [Entity List in the format provided]

Your task is to identify the three entities from the entity list that are most relevant to the image entity. The relevance should be based on the semantic similarity of the image entity's description to the entities in the list.
For each of the three most relevant entities, output the following information in the same format as the input entity list:entity_name,entity_type,description

-Instructions-
Use the content of the image entity (description) to determine the relevance.
Return the top three most relevant entities based on this comparison.

-Output Requirements-
Return exactly three entities in the same format as the input entity list, unless the input entity list contains three or fewer entities. In that case, return all the entities. The output should consist of only the following fields for each entity: entity_name；entity_type；description

-Example Input-
Image Entity Description: "Barack Obama is the 44th president of the United States, known for his landmark healthcare reform and efforts in economic recovery after the 2008 financial crisis. He was awarded the Nobel Peace Prize in 2009."
Entity List: [
  {
    "entity_name": "\"BARACK OBAMA\"",
    "entity_type": "\"PERSON\"",
    "description": "\"Barack Obama is the 44th president of the United States, known for his landmark healthcare reform and efforts in economic recovery after the 2008 financial crisis. He was awarded the Nobel Peace Prize in 2009.\""
  },
  {
    "entity_name": "\"MICHELLE OBAMA\"",
    "entity_type": "\"PERSON\"",
    "description": "\"Michelle Obama is a former First Lady of the United States, known for her work on education and healthy eating initiatives. She is the wife of Barack Obama and has become an influential figure in her own right.\""
  },
  {
    "entity_name": "\"THE WHITE HOUSE\"",
    "entity_type": "\"ORGANIZATION\"",
    "description": "\"The White House is the official residence and workplace of the President of the United States. Barack Obama served as the President and worked here during his two terms in office.\""
  },
  {
    "entity_name": "\"NOBEL PEACE PRIZE\"",
    "entity_type": "\"AWARD\"",
    "description": "\"The Nobel Peace Prize is awarded annually to individuals or organizations that have made significant contributions to peace. Barack Obama won this award in 2009 for his efforts to strengthen international diplomacy.\""
  },
  {
    "entity_name": "\"THE OBAMA FOUNDATION\"",
    "entity_type": "\"ORGANIZATION\"",
    "description": "\"The Obama Foundation is a non-profit organization created by Barack Obama and Michelle Obama to promote leadership and empowerment. It focuses on global initiatives for the next generation of leaders.\""
  }
]
-Example Output-
[
  {
    "entity_name": "\"BARACK OBAMA\"",
    "entity_type": "\"PERSON\"",
    "description": "\"Barack Obama is the 44th president of the United States, known for his landmark healthcare reform and efforts in economic recovery after the 2008 financial crisis. He was awarded the Nobel Peace Prize in 2009.\""
  },
  {
    "entity_name": "\"THE WHITE HOUSE\"",
    "entity_type": "\"ORGANIZATION\"",
    "description": "\"The White House is the official residence and workplace of the President of the United States. Barack Obama served as the President and worked here during his two terms in office.\""
  },
  {
    "entity_name": "\"NOBEL PEACE PRIZE\"",
    "entity_type": "\"AWARD\"",
    "description": "\"The Nobel Peace Prize is awarded annually to individuals or organizations that have made significant contributions to peace. Barack Obama won this award in 2009 for his efforts to strengthen international diplomacy.\""
  }
]
"""

PROMPTS["llm_text_entity_alignment_user"] = """
-Input-
Image Entity List:{image_entity_list}
Text Entity List:{text_entity_list}
-Output-
"""

PROMPTS["llm_text_entity_alignment_system"] = """
You are given two lists of entities, `image_entity_list` and `text_entity_list`. Each entity has the following attributes:
- `entity_name`: The name of the entity.
- `entity_type`: The type of entity (e.g., PERSON, GEO).
- `description`: A text description of the entity.

Your task is to compare the descriptions of each entity in `image_entity_list` with the descriptions in `text_entity_list` and find the most similar entity from `nearby_text_entity_list` for each entity in `filtered_image_entity_list`.

For each entity in `image_entity_list`, identify the entity from `text_entity_list` that has the most similar description based on semantic meaning (appearance, location, context, etc.).

Please return the result as a list of dictionaries in the following format:
- For each entity in `image_entity_list`, include the following:
  - `image_entity`: The full entity object from `image_entity_list`.
  - `chunk_entity`: The most similar entity object from `text_entity_list`.
  - `reason`: A brief explanation of why the two entities are considered similar based on their descriptions.

### Example Input
Image Entity List:
[
  {
    "entity_name": "AIRPLANE",
    "entity_type": "GEO",
    "description": "Part of an airplane is visible in the background, suggesting the setting is an airport or near an aircraft."
  },
  {
    "entity_name": "HELICOPTER",
    "entity_type": "GEO",
    "description": "A helicopter hovering above a cityscape, with a pilot visible inside."
  }
]

Text Entity List:
[
  {
    "entity_name": "AIRPORT",
    "entity_type": "GEO",
    "description": "A large building with planes on the tarmac and passengers walking by, indicating a busy airport terminal."
  },
  {
    "entity_name": "PLANE WING",
    "entity_type": "GEO",
    "description": "A close-up of a plane's wing, with part of the engine visible."
  },
  {
    "entity_name": "AIRPLANE",
    "entity_type": "GEO",
    "description": "An airplane on the tarmac, ready for departure."
  }
]

### Example Output
[
  {
    "image_entity": {
      "entity_name": "AIRPLANE",
      "entity_type": "GEO",
      "description": "Part of an airplane is visible in the background, suggesting the setting is an airport or near an aircraft."
    },
    "chunk_entity": {
      "entity_name": "AIRPLANE",
      "entity_type": "GEO",
      "description": "An airplane on the tarmac, ready for departure."
    },
    "reason": "Both descriptions refer to an airplane, with one focusing on its presence in the background and the other on its readiness for departure."
  },
  {
    "image_entity": {
      "entity_name": "HELICOPTER",
      "entity_type": "GEO",
      "description": "A helicopter hovering above a cityscape, with a pilot visible inside."
    },
    "chunk_entity": {
      "entity_name": "AIRPORT",
      "entity_type": "GEO",
      "description": "A large building with planes on the tarmac and passengers walking by, indicating a busy airport terminal."
    },
    "reason": "The helicopter is hovering above a city, which may be near or within the vicinity of an airport, making them contextually related."
  }
]

###Key Constraints

The format of the output must be exactly as shown in the example output, including field names, data structures, and formatting.
The reason must provide a meaningful explanation of the match while remaining concise.
The output must include only the required fields: image_entity, chunk_entity, and reason. No additional information, commentary, or formatting should be present.
"""